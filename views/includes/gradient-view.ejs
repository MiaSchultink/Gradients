<div class="wrap-canvas">
<div class="gradient-container">
  <div class="info-container">
    <!-- <div class="info-subcontainer"> -->
      <div class="info-text">
      <h1>
        <%=gradient.title%>
      </h1>
    
      <div calss="creator-container">
      <div class="creator"><%=gradient.userId.name%></div>
    </div>
</div>

          <div class="btns-container">
            <form class="from" action="/gradient/favorites" method="post">
              <input type="hidden" name="userId" value='<%=userId%>'>
              <input type="hidden" name="gradientId" value='<%=gradientId%>'>
              <input type="hidden" name="_csrf" value='<%=csrfToken%>'>
              <button class="btn" type="submit">
                <% if(favorites.includes(gradientId)){%>
                  <i id ="heart" class="fas fa-heart icon big"></i></button>
                <% } else{%> 
                 <i id ="heart" class="far fa-heart icon big"></i></button>
                 <% } %> 
            </form>

    <% if(gradient.userId._id.toString()==userId.toString()){%>
            <form class="form" action="/gradient/delete" method="post">
              <input type="hidden" name="userId" value='<%=userId%>'>
              <input type="hidden" name="gradientId" value='<%=gradientId%>'>
              <input type="hidden" name="_csrf" value='<%=csrfToken%>'>
              <button class="btn" type="submit"><i class="fas fa-trash-alt delete icon big"></i></button>
            </form>
            <button class="btn" onclick="location.assign('/gradient/edit/<%=gradientId%>')"><i class="fad fa-edit icon big"></i></button>


            <% } %> 
            <% if(!gradient.library) { %>
              <form class="form" action="/gradient/library" method="post">
                <input type="hidden" name="_csrf" value='<%=csrfToken%>'>
                <input type="hidden" name="gradientId" value='<%=gradientId%>'>
                <button class="btn-text" type="submit">Publish to library</button>
              </form>
              <% } %>
          </div>

          <div class="tags-container">
            <%for(let i=0; i<gradient.tags.length; i++ ){%>
              <div class="tag">#<%=gradient.tags[i]%>
              </div>
              <% } %>
            </div>
  </div>

  <div class="download-container">

  <form class="download-form" action="/gradient/download" method="post">
     
    <div class = "form-group">
      <label class="dwnl-label" for="width"> Width </label>
       <input  width = "100px" class="text-small" id="width" class="form-input-text" type="text" name="width" 
        placeholder="enter width" value="500">
        </div>
      
      <div class = "form-group">
           <label class="dwnl-label" for= "aspectRatio">Aspect ratio</label>
           <select width = "100px" class="text-small" id="aspectRatio" name="aspectRatio">
           <option value="0.75">4X3</option>
           <option value="0.5625">16X9</option>
           <option value="1">1X1</option>
       </select>
    </div>
  
    <div class = "form-group">
     <input type="hidden" name="gradientId" value='<%=gradientId%>'>
     <input type="hidden" name="_csrf" value='<%=csrfToken%>'>
     <button class="btn-download" type="submit"><i class="fad fa-download icon big"></i></button>
  </div>

    </form>
</div>

  <canvas class="canvas" id="gradient-canvas" height="500" width="500"></canvas>
  
</div>
</div>

<script>

  const canvas = document.getElementById("gradient-canvas");
  const context = canvas.getContext("2d");


  // function createGradient(gradient, context, color1, color2) {
  //   gradient.addColorStop(0,  color1);
  //   gradient.addColorStop(1, color2);
  //   context.fillStyle = gradient;
  //   context.fillRect(0, 0, 500, 500);

  // }

  function createGradient(gradient, context, colors){
    colors = colors.split(',')
    gradient.addColorStop(0, colors[0])
    for(let i=1; i<colors.length-1; i++){
      const color = colors[i];
      console.log(color)
       const stopOffset = i/colors.length;
       gradient.addColorStop(stopOffset, color);
    }
    gradient.addColorStop(1, colors[colors.length-1])
      context.fillStyle = gradient;
      context.fillRect(0, 0, 500, 500);
  }

  let gradient;
  switch ('<%=gradient.type%>') {
    case 'horizontal':
      gradient = context.createLinearGradient(0, 0, 500, 0);
      createGradient(gradient, context, '<%=gradient.colors%>')
      break;


    case 'vertical':
      gradient = context.createLinearGradient(0, 0, 0, 500)
      createGradient(gradient, context, '<%=gradient.colors%>')
      break;

    case 'radial':
      gradient = context.createRadialGradient(300, 300, 30, 300, 300, 300)
      createGradient(gradient, context, '<%=gradient.colors%>')
      break;

    case 'diagonal':
      gradient = context.createLinearGradient(0, 0, 500, 500)
      createGradient(gradient, context, '<%=gradient.colors%>')
      break;

  }




</script>

